var enioka = (enioka || {});

enioka.ij = (
    function (eniokaij) {
        /**
         * @class
         * @description Handle functions to add ClassPrefix/IdPrefix and get their values
         * @memberof enioka.ij.IIJRenderer
         * @classdesc HTMLTemplate module is part of HTMLRenderer to allow customisation
         * to the user, add classes to : cells, table, headers, etc.
         * <br/>
         */
        var HTMLTemplate = {
            initialize : function() {
                this.template = {};
            },

            /**
             * @function
             * @description add a class prefix to an object create it, if he doesn't exist
             * @param {string} elementType an element categorie generated by the Renderer
             * @param {string} classPrefix class to be added at an object (has to be define)
             */
            addClassPrefix : function(elementType, classPrefix){
                if (!this.template[elementType])
                    this.template[elementType] = {};
                this.template[elementType].classPrefix = classPrefix;
            },

            /**
             * @function
             * @description add a id prefix to an object create the pattern, if he doesn't exist
             * @param {Element} elementType an element categorie generated by the Renderer
             * @param {string} idPrefix id to be added at an object (has to be define)
             */
            addIdPrefix : function(elementType, idPrefix){
                if (!this.template[elementType])
                    this.template[elementType] = {};
                this.template[elementType].idPrefix = idPrefix;
            },

            /**
             * @function
             * @description get the value of an object or 'null' if elementType doesn't exist
             * @param {string} elementType an element categorie generated by the Renderer
             * @param {string} name of the pattern
             * @return {string|null} the value of propertyName, or null  
             */
            getAttribute : function(elementType, propertyName){
                if (this.template[elementType])
                    return this.template[elementType][propertyName];
                else
                    return null;
            }
        };
        //Instanciate the HTMLTemplate Class into an object
        HTMLTemplate = Class.create(HTMLTemplate);

        eniokaij.HTMLTemplate = HTMLTemplate;

        return eniokaij;
    }(enioka.ij || {})
);
